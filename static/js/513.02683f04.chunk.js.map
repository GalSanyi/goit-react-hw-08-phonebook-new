{"version":3,"file":"static/js/513.02683f04.chunk.js","mappings":"gRASe,SAASA,IAEtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAaN,OACA,4BAEE,iJAEA,iBAAMC,SAda,SAAAC,GACnBA,EAAEC,iBACFd,GAASe,EAAAA,EAAAA,IAAS,CAAEZ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAEjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAQZ,UACA,SAAC,IAAD,CAAKQ,GAAI,CAAEC,MAAO,OAAlB,UACA,UAAC,IAAD,CAAOC,QAAS,EAAhB,WACE,SAAC,IAAD,CACEC,WAAS,EACXC,OAAO,QACNC,QAAQ,WACPC,MAAM,OACNC,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRf,MAAOR,EACPwB,SAAUlB,KAGZ,SAAC,IAAD,CACGU,WAAS,EACZC,OAAO,QACNC,QAAQ,WACPC,MAAM,QACNC,KAAK,QACLpB,KAAK,QACLuB,UAAQ,EACRf,MAAON,EACPsB,SAAUlB,KAGX,SAAC,IAAD,CACEU,WAAS,EACZC,OAAO,QACNC,QAAQ,WACPC,MAAM,WACNC,KAAK,WACLpB,KAAK,WACLuB,UAAQ,EACRf,MAAOJ,EACPoB,SAAUlB,KAEX,SAAC,IAAD,WACA,SAAC,IAAD,CAAQc,KAAK,SAASK,MAAM,YAAYP,QAAS,WAAjD","sources":["routes/Registration/registration.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from 'redux/auth/auth-operations';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\n\nexport default function Registration() {\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }));\n      \n    setName('');\n    setEmail('');\n    setPassword('');\n  }\n\n  return (\n  <div>\n  \n    <h1>Страница регистрации</h1>\n\n    <form onSubmit={handleSubmit}>\n    <Box sx={{ width: '50%' }}>\n    <Stack spacing={2} >\n      <TextField\n        autoFocus\n      margin='dense'\n       variant=\"standard\"\n        label=\"name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n      \n      <TextField\n         autoFocus\n      margin='dense'\n       variant=\"standard\"\n        label='email'\n        type=\"email\"\n        name=\"email\"\n        required\n        value={email}\n        onChange={handleChange}\n       />\n       \n       <TextField\n         autoFocus\n      margin='dense'\n       variant=\"standard\"\n        label='password'\n        type=\"password\"\n        name=\"password\"\n        required\n        value={password}\n        onChange={handleChange}\n       />\n       <Box>\n       <Button type=\"submit\" color='secondary' variant= 'outlined' >\n        Зарегистрироваться\n       </Button>\n       </Box>\n       </Stack>\n       </Box>\n     \n      </form>\n\n  </div>\n  );\n}\n\nRegistration.propTypes = {\n  onSubmit: PropTypes.func,\n  users: PropTypes.arrayOf(PropTypes.object),\n};\n\n\n"],"names":["Registration","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","register","sx","width","spacing","autoFocus","margin","variant","label","type","pattern","title","required","onChange","color"],"sourceRoot":""}